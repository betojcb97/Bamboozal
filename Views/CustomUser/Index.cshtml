@{
    ViewBag.Title = "List Users";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>List Businesses</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="~/js/Util.js"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<body>
    <div class="page-container d-flex flex-column">
        <div class="container">
            <h1>List of Users</h1>
            <button type="button" class="btnAdd" data-toggle="modal" data-target="#addUserModal" >Add User</button>
            <button type="button" class="btnEdit" data-toggle="modal" data-target="#editUserModal" >Edit User</button>
            <button type="button" class="btnRemove" data-toggle="modal" data-target="#removeUserModal" >Remove User</button>
            <div id="alertContainer"></div>
            <table class="table table-hover mt-3">
                <thead>
                    <tr>
                        <th></th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Address</th>
                        <th>Is Active</th>
                        <th>Business</th>
                        <th>Date of Birth</th>
                        <th>Date of Register</th>
                    </tr>
                </thead>
                <tbody id="usersTableBody"></tbody>
            </table>
        </div>
    </div>

    <div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addUserModalLabel">Add User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span> </button>
                </div>
                <div class="modal-body">
                    <form id="addUserForm">
                        <div class="form-group">
                            <label for="userName">User Name</label>
                            <input type="text" class="form-control" id="userName" name="userName" maxlength="50" required>
                            <div class="invalid-feedback">The userName must be provided and not exceed 50 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="userEmail">User Email</label>
                            <input type="email" class="form-control" id="userEmail" name="userEmail" maxlength="50" required>
                            <div class="invalid-feedback">The userEmail must be provided and not exceed 50 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="userPassword">User Password</label>
                            <input type="password" class="form-control" id="userPassword" name="userPassword" maxlength="50" required>
                            <div class="invalid-feedback">The userPassword must be provided and not exceed 50 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="rePassword">Confirm Password</label>
                            <input type="password" class="form-control" id="rePassword" name="rePassword" required>
                            <div class="invalid-feedback">The passwords must match.</div>
                        </div>
                        <div class="form-group">
                            <label for="userFirstName">First Name</label>
                            <input type="text" class="form-control" id="userFirstName" name="userFirstName" maxlength="20" required>
                            <div class="invalid-feedback">The userFirstName must be provided and not exceed 20 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="userLastName">Last Name</label>
                            <input type="text" class="form-control" id="userLastName" name="userLastName" maxlength="20" required>
                            <div class="invalid-feedback">The userLastName must be provided and not exceed 20 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="addressID">Address ID</label>
                            <select class="form-control" id="addressID" name="addressID">
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="businessID">Business ID</label>
                            <select class="form-control" id="businessID" name="businessID" required>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="dateOfBirth">Date of Birth</label>
                            <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth">
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="sendBtnAdd">Send</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editUserForm">
                        <div class="form-group">
                            <label for="userName">User Name</label>
                            <input type="text" class="form-control" id="userName" name="userName" maxlength="50">
                        </div>
                        <div class="form-group">
                            <label for="userEmail">User Email</label>
                            <input type="email" class="form-control" id="userEmail" name="userEmail" maxlength="50">
                        </div>
                        <div class="form-group">
                            <label for="userFirstName">First Name</label>
                            <input type="text" class="form-control" id="userFirstName" name="userFirstName" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="userLastName">Last Name</label>
                            <input type="text" class="form-control" id="userLastName" name="userLastName" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="addressID">Address ID</label>
                            <select class="form-control" id="addressID" name="addressID">
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="businessID">Business ID</label>
                            <select class="form-control" id="businessID" name="businessID" required>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="dateOfBirth">Date of Birth</label>
                            <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth">
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="sendBtnEdit">Send</button>
                </div>
            </div>
        </div>
    </div>

<script>

    let selectedUserId;
    $(document).ready(function () {
        fetchAddresses();
        fetchBusinesses();
        fetchAndFillUsersTable();
    });

    $('#sendBtnAdd').on('click', function (event) {
        let form = $('#addUserForm')[0];
        if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
        }
        form.classList.add('was-validated');
        if (form.checkValidity() === true) {
            let formData = $('#addUserForm').serializeArray();
            let jsonData = {};
            formData.forEach(function (item) {
                if ((item.name === "addressID" || item.name === "ownerOfBusinessID") && item.value === "") {
                    jsonData[item.name] = null;
                } else if (item.value === "") {
                    jsonData[item.name] = null;
                } else {
                    jsonData[item.name] = item.value;
                }
            });
            event.preventDefault();
            $.ajax({
                url: '/CustomUser/AddUser',
                type: 'POST',
                data: JSON.stringify(jsonData),
                contentType: 'application/json',
                beforeSend: function (xhr) {
                    var authToken = localStorage.getItem('authToken');
                    xhr.setRequestHeader("Authorization", "Bearer " + authToken);
                },
                success: function (response) {
                    showAlert("User added successfully!");
                    fetchAndFillUsersTable();
                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) {
                        window.location.href = '/CustomUser/LoginPage';
                    }
                    showAlert("Error adding user! "+ error);
                }
            });
        }
    });

    $('#sendBtnEdit').on('click', function (event) {
        let form = $('#editUserForm')[0];
        if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
        }
        form.classList.add('was-validated');
        if (form.checkValidity() === true) {
            let formData = $('#editUserForm').serializeArray();
            let jsonData = {};
            formData.forEach(function (item) {
                if ((item.name === "addressID" || item.name === "businessID") && item.value === "") {
                    jsonData[item.name] = null;
                } else if (item.value === "") {
                    jsonData[item.name] = null;
                } else {
                    jsonData[item.name] = item.value;
                }
            });
            event.preventDefault();
            $.ajax({
                url: '/CustomUser/EditCustomUser/' + selectedUserId,
                type: 'POST',
                data: JSON.stringify(jsonData),
                contentType: 'application/json',
                beforeSend: function (xhr) {
                    var authToken = localStorage.getItem('authToken');
                    xhr.setRequestHeader("Authorization", "Bearer " + authToken);
                },
                success: function (response) {
                    showAlert("User updated successfully!");
                    fetchAndFillUsersTable();
                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) {
                        window.location.href = '/CustomUser/LoginPage';
                    }
                    showAlert("Error updating address! " + error);
                }
            });
        }
    });

    $('button[data-target="#editUserModal"]').on('click', function () {
        let selectedRow = $('input.user-checkbox:checked').closest('tr');
        if (selectedRow.length === 0) {
            alert('Please select a user to edit.');
            return false;
        }
        if (selectedRow.length > 1) {
            alert('Please select only one user to edit.');
            return false;
        }
        selectedUserId = selectedRow.attr('data-user-id');
    });

    $('button[data-target="#removeUserModal"]').on('click', function () {
        let selectedRow = $('input.user-checkbox:checked').closest('tr');
        if (selectedRow.length === 0) {
            alert('Please select a user to remove.');
            return false;
        }
        if (selectedRow.length > 1) {
            alert('Please select only one user to remove.');
            return false;
        }
        selectedUserId = selectedRow.attr('data-user-id');
        $.ajax({
            url: '/CustomUser/RemoveCustomUser/' + selectedUserId,
            type: 'POST',
            contentType: 'application/json',
            beforeSend: function (xhr) {
                var authToken = localStorage.getItem('authToken');
                xhr.setRequestHeader("Authorization", "Bearer " + authToken);
            },
            success: function (response) {
                showAlert("User removed successfully!");
                fetchAndFillUsersTable();
            },
            error: function (xhr, status, error) {
                if (xhr.status === 401) {
                    window.location.href = '/CustomUser/LoginPage';
                }
                showAlert("Error removing user! " + error);
            }
        });
    });

    function fetchAndFillUsersTable() {
        $.ajax({
            url: '/CustomUser/ListUsers',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                let tableBody = $('#usersTableBody');
                tableBody.empty();

                data.forEach(function (user) {
                    let isActive = user.isActive ? 'Yes' : 'No';
                    let address = '';
                    if (user.addressDto) {
                        if (user.addressDto.street) {
                            address += `${user.addressDto.street}`;
                        }
                        if (user.addressDto.city) {
                            address += `, ${user.addressDto.city}`;
                        }
                        if (user.addressDto.postalCode) {
                            address += `, ${user.addressDto.postalCode}`;
                        }
                    }
                    if (address === '') {
                        address = 'N/A';
                    }

                    let business = '';
                    if (user.businessDto) {
                        business += `${user.businessDto.name}`;
                    }
                    let dateOfBirth = formatISODate(user.dateOfBirth);
                    let dateOfRegister = formatISODate(user.dateOfRegister);

                    tableBody.append(
                        `<tr data-user-id="${user.userID}">
                            <td><input type="checkbox" class="user-checkbox"></td>
                            <td>${user.userFirstName}</td>
                            <td>${user.userLastName}</td>
                            <td>${address}</td>
                            <td>${isActive}</td>
                            <td>${business}</td>
                            <td>${dateOfBirth}</td>
                            <td>${dateOfRegister}</td>
                        </tr>`
                    );
                });
            },
            error: function (xhr, status, error) {
                showAlert('Error: ' + error);
            }
        });
    }

    function fetchBusinesses() {
        $.ajax({
            url: '/Business/ListBusinesses',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                let businessDropdowns = $('select[name="businessID"]');
                data.forEach(function (business) {
                    businessDropdowns.append(`<option value="${business.businessID}">${business.name}</option>`);
                });
                businessDropdowns.append(`<option value="">Null</option>`);
            },
            error: function (xhr, status, error) {
                showAlert('Error: ' + error);
            }
        });
    }

    function fetchAddresses() {
        $.ajax({
            url: '/Address/ListAddresses',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                let addressDropdowns = $('select[name="addressID"]');
                data.forEach(function (address) {
                    addressDropdowns.append(`<option value="${address.addressID}">${address.street}</option>`);
                });
                addressDropdowns.append(`<option value="">Null</option>`);
            },
            error: function (xhr, status, error) {
                showAlert('Error: ' + error);
            }
        });
    }

</script>

</body>
</html>
