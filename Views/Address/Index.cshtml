@{
    ViewBag.Title = "List Addresses";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>List Businesses</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="~/js/Util.js"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

</head>

<body>

    <div class="page-container d-flex flex-column">
        <div class="container">
            <h1>List of Addresses</h1>
            <button type="button" class="btnAdd" data-toggle="modal" data-target="#addAddressModal" >Add Address</button>
            <button type="button" class="btnEdit" data-toggle="modal" data-target="#editAddressModal">Edit Address</button>
            <button type="button" class="btnRemove" data-toggle="modal" data-target="#removeAddressModal">Remove Address</button>
            <div id="alertContainer"></div>
            <table class="table table-hover mt-3">
                <thead>
                    <tr>
                        <th></th>
                        <th>Street</th>
                        <th>Number</th>
                        <th>City</th>
                        <th>State</th>
                        <th>Country</th>
                        <th>Postal Code</th>
                    </tr>
                </thead>
                <tbody id="addressesTableBody"></tbody>
            </table>
        </div>
    </div>

    <div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span> </button>
                </div>
                <div class="modal-body">
                    <form id="addAddressForm">
                        <div class="form-group">
                            <label for="street">Street</label>
                            <input type="text" class="form-control" id="street" name="street" maxlength="70" required>
                            <div class="invalid-feedback">The street of the business must be provided and not exceed 70 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="number">Number</label>
                            <input type="text" class="form-control" id="number" name="number" maxlength="10" required>
                            <div class="invalid-feedback">The number of the business must be provided and not exceed 10 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="city">City</label>
                            <input type="text" class="form-control" id="city" name="city" maxlength="20" required>
                            <div class="invalid-feedback">The city of the business must be provided and not exceed 20 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="country">Country</label>
                            <input type="text" class="form-control" id="country" name="country" maxlength="20" required>
                            <div class="invalid-feedback">The country of the business must be provided and not exceed 20 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="state">State</label>
                            <input type="text" class="form-control" id="state" name="state" maxlength="20" required>
                            <div class="invalid-feedback">The state of the business must be provided and not exceed 20 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="postalCode">Postal Code</label>
                            <input type="text" class="form-control" id="postalCode" name="postalCode" maxlength="8" required>
                            <div class="invalid-feedback">The postal code of the business must be provided and not exceed 8 characters.</div>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="sendBtnAdd">Send</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editAddressModal" tabindex="-1" role="dialog" aria-labelledby="editAddressModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editAddressForm">
                        <div class="form-group">
                            <label for="street">Street</label>
                            <input type="text" class="form-control" id="street" name="street" maxlength="70">
                        </div>
                        <div class="form-group">
                            <label for="number">Number</label>
                            <input type="text" class="form-control" id="number" name="number" maxlength="10">
                        </div>
                        <div class="form-group">
                            <label for="city">City</label>
                            <input type="text" class="form-control" id="city" name="city" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="country">Country</label>
                            <input type="text" class="form-control" id="country" name="country" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="state">State</label>
                            <input type="text" class="form-control" id="state" name="state" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="postalCode">Postal Code</label>
                            <input type="text" class="form-control" id="postalCode" name="postalCode" maxlength="8">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="sendBtnEdit">Send</button>
                </div>
            </div>
        </div>
    </div>

<script>

    let selectedAddressId;

    $(document).ready(function () {
        fetchAndFillAddressesTable();
    });

    $('#sendBtnAdd').on('click', function (event) {
        let form = $('#addAddressForm')[0];
        if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
        }
        form.classList.add('was-validated');
        if (form.checkValidity() === true) {
            let formData = $('#addAddressForm').serializeArray();
            let jsonData = {};
            formData.forEach(function (item) {
                if (item.name === "addressID" && item.value === "") {
                    jsonData[item.name] = null;
                } else if (item.name === "isActive") {
                    jsonData[item.name] = item.value === "on" ? true : false;
                } else if (item.value === "") {
                    jsonData[item.name] = null;
                } else {
                    jsonData[item.name] = item.value;
                }
            });
            event.preventDefault();
            debugger;
            $.ajax({
                url: '/Address/AddAddress',
                type: 'POST',
                data: JSON.stringify(jsonData),
                contentType: 'application/json',
                beforeSend: function (xhr) {
                    var authToken = localStorage.getItem('authToken');
                    xhr.setRequestHeader("Authorization", "Bearer " + authToken);
                },
                success: function (response) {
                    showAlert("Address added successfully!");
                    fetchAndFillAddressesTable();
                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) {
                        window.location.href = '/CustomUser/LoginPage';
                    }
                    showAlert("Error adding address! " + error);
                }
            });
        }
        $('#addAddressModal').modal('hide');
    });

    $('button[data-target="#editAddressModal"]').on('click', function () {
        let selectedRow = $('input.address-checkbox:checked').closest('tr');
        if (selectedRow.length === 0) {
            alert('Please select a address to edit.');
            return false;
        }
        if (selectedRow.length > 1) {
            alert('Please select only one address to edit.');
            return false;
        }
        selectedAddressId = selectedRow.attr('data-address-id');
    });

    $('button[data-target="#removeAddressModal"]').on('click', function () {
        let selectedRow = $('input.address-checkbox:checked').closest('tr');
        if (selectedRow.length === 0) {
            alert('Please select a address to remove.');
            return false;
        }
        if (selectedRow.length > 1) {
            alert('Please select only one address to remove.');
            return false;
        }
        selectedAddressId = selectedRow.attr('data-address-id');
        $.ajax({
            url: '/Address/RemoveAddress/' + selectedAddressId,
            type: 'POST',
            contentType: 'application/json',
            beforeSend: function (xhr) {
                var authToken = localStorage.getItem('authToken');
                xhr.setRequestHeader("Authorization", "Bearer " + authToken);
            },
            success: function (response) {
                showAlert("Address removed successfully!");
                fetchAndFillAddressesTable();
            },
            error: function (xhr, status, error) {
                if (xhr.status === 401) {
                    window.location.href = '/CustomUser/LoginPage';
                }
                showAlert("Error removing address! " + error);
            }
        });
        $('#editAddressModal').modal('hide');
    });

    $('#sendBtnEdit').on('click', function (event) {
        let form = $('#editAddressForm')[0];
        if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
        }
        form.classList.add('was-validated');
        if (form.checkValidity() === true) {
            let formData = $('#editAddressForm').serializeArray();
            let jsonData = {};
            formData.forEach(function (item) {
                if (item.name === "addressID" && item.value === "") {
                    jsonData[item.name] = null;
                } else if (item.name === "isActive") {
                    jsonData[item.name] = item.value === "on" ? true : false;
                } else if (item.value === "") {
                    jsonData[item.name] = null;
                } else {
                    jsonData[item.name] = item.value;
                }
            });
            event.preventDefault();
            $.ajax({
                url: '/Address/EditAddress/' + selectedAddressId,
                type: 'POST',
                data: JSON.stringify(jsonData),
                contentType: 'application/json',
                beforeSend: function (xhr) {
                    var authToken = localStorage.getItem('authToken');
                    xhr.setRequestHeader("Authorization", "Bearer " + authToken);
                },
                success: function (response) {
                    showAlert("Address updated successfully!");
                    fetchAndFillAddressesTable();
                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) {
                        window.location.href = '/CustomUser/LoginPage';
                    }
                    showAlert("Error updating address! " + error);
                }
            });
        }
        $('#editAddressModal').modal('hide');
    });

    function fetchAndFillAddressesTable() {
        $.ajax({
            url: '/Address/ListAddresses',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                let tableBody = $('#addressesTableBody');
                tableBody.empty();

                data.forEach(function (address) {
                    tableBody.append(
                        `<tr data-address-id="${address.addressID}">
                            <td><input type="checkbox" class="address-checkbox"></td>
                            <td>${address.street}</td>
                            <td>${address.number}</td>
                            <td>${address.city}</td>
                            <td>${address.state}</td>
                            <td>${address.country}</td>
                            <td>${address.postalCode}</td>
                        </tr>`
                    );
                });
            },
            error: function (xhr, status, error) {
                showAlert('Error: ' + error);
            }
        });
    }

</script>
</body>
</html>