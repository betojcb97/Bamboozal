@{
    ViewBag.Title = "List Business Products";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>List Businesses</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="~/js/Util.js"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

</head>

<body>
    <div class="page-container d-flex flex-column">
        <div class="container">
            <h1>Products</h1>
            <button type="button" class="btnAdd" onclick="assureLogin();$('#addProductModal').modal('show');">Add Product</button>
            <button type="button" class="btnEdit" onclick="assureLogin();openEditModal()">Edit Product</button>
            <button type="button" class="btnRemove" onclick="assureLogin();removeProduct()">Remove Product</button>
            <label for="orderBy" style="font-size: 15px; margin-right: 10px; margin-left: 10px;">Order by</label>
            <select class="filter" id="orderBy">
                <option value="name" selected>Name</option>
                <option value="price">Price</option>
            </select>
            <select class="filter" id="ordering">
                <option value="ascending" selected>Ascending</option>
                <option value="descending">Descending</option>
            </select>
            <div id="alertContainer"></div>
            <table class="custom-table  table-striped table-hover table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th onclick="orderBy='name';fillProductsTable(selectedBusinessId)">Name <i class="fas fa-sort"></i></th>
                        <th>Description</th>
                        <th onclick="orderBy='price';fillProductsTable(selectedBusinessId)">Price <i class="fas fa-sort"></i></th>
                        <th>Cost</th>
                        <th>Tax</th>
                        <th>Discount</th>
                        <th>Image</th>
                        <th>Business</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody id="productsTableBody">
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addProductModalLabel">Add Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addProductForm">
                        <div class="form-group">
                            <label for="name">Name</label>
                            <input type="text" class="form-control" id="name" name="name" maxlength="50" required>
                            <div class="invalid-feedback">The name of the product must be provided and not exceed 50 characters.</div>
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" name="description"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="price">Price</label>
                            <input type="number" class="form-control" id="price" name="price" maxlength="70" step="0.01" required>
                            <div class="invalid-feedback">The price of the product must be provided.</div>
                        </div>
                        <div class="form-group">
                            <label for="cost">Cost</label>
                            <input type="number" class="form-control" id="cost" name="cost" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="tax">Tax</label>
                            <input type="number" class="form-control" id="tax" name="tax" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="discount">Discount</label>
                            <input type="number" class="form-control" id="discount" name="discount" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="imageUrl">ImageUrl</label>
                            <input type="text" class="form-control" id="imageUrl" name="imageUrl" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="businessID">Business ID</label>
                            <select class="form-control" id="businessID" name="businessID" required>
                            </select>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="isActive" name="isActive">
                            <label class="form-check-label" for="isActive">Active</label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="closeBtnAdd" onclick="$('#addProductModal').modal('hide');">Close</button>
                    <button type="button" class="btn btn-primary" id="sendBtnAdd" onclick="addProduct()">Send</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm">
                        <div class="form-group">
                            <label for="name">Name</label>
                            <input type="text" class="form-control" id="name" name="name" maxlength="50">
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" name="description"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="price">Price</label>
                            <input type="number" class="form-control" id="price" name="price" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="cost">Cost</label>
                            <input type="number" class="form-control" id="cost" name="cost" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="tax">Tax</label>
                            <input type="number" class="form-control" id="tax" name="tax" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="discount">Discount</label>
                            <input type="number" class="form-control" id="discount" name="discount" maxlength="70" step="0.01">
                        </div>
                        <div class="form-group">
                            <label for="imageUrl">ImageUrl</label>
                            <input type="text" class="form-control" id="imageUrl" name="imageUrl" maxlength="20">
                        </div>
                        <div class="form-group">
                            <label for="businessID">Business ID</label>
                            <select class="form-control" id="businessID" name="businessID">
                            </select>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="isActive" name="isActive">
                            <label class="form-check-label" for="isActive">Active</label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="closeBtnEdit" onclick="$('#editProductModal').modal('hide');">Close</button>
                    <button type="button" class="btn btn-primary" id="sendBtnEdit" onclick="editProduct()">Send</button>
                </div>
            </div>
        </div>
    </div>

    <script>

        let selectedProductId;
        let selectedProductsIds = [];
        let selectedBusinessId = '';
        let orderBy = 'name';
        let ordering = 'ascending';
        const decimals = ["price", "cost", "tax", "discount"];

        $(document).ready(function () {
            getOwnerOfBuinessID()
                .then(function (data) {
                    selectedBusinessId = data;
                    return fillProductsTable(); 
                })
                .catch(function (error) {
                    console.error(error);
                });
            fillBusinessesDropdown();
        });

        $('#orderBy').change(function(){
            orderBy = $(this).val();
            fillProductsTable();
        });

        $('#ordering').change(function () {
            ordering = $(this).val();
            fillProductsTable();
        });

        function getOwnerOfBuinessID(){
            return new Promise((resolve,reject) => {
                $.ajax({
                    url: '/CustomUser/GetOwnerOfBusinessID',
                    type: 'GET',
                    contentType: 'application/json',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer " + localStorage.getItem('authToken'));
                    },
                    success: function (response) {
                        resolve(response);
                    },
                    error: function (xhr, status, error) {
                        let errorMessage = xhr.status + ': ' + xhr.statusText + " -" + xhr.responseText;
                        showAlert('Error: ' + errorMessage);
                        reject(errorMessage);
                    }
                });
            });
        };

        function addProduct() {
            let form = $('#addProductForm')[0];
            if (form.checkValidity() === true) {
                form.classList.add('was-validated');
                let formData = $('#addProductForm').serializeArray();
                let jsonData = {};
                formData.forEach(function (item) {
                    if (item.name === "businessID" && item.value === "") {
                        jsonData[item.name] = null;
                    } else if (item.name === "isActive") {
                        jsonData[item.name] = item.value === "on" ? true : false;
                    } else if (decimals.includes(item.name)) {
                        if (item.value === "") {
                            jsonData[item.name] = 0;
                        }
                        else {
                            jsonData[item.name] = parseFloat(item.value);
                        }
                    } else if (item.value === "") {
                        jsonData[item.name] = null;
                    } else {
                        jsonData[item.name] = item.value;
                    }
                });
                event.preventDefault();
                $.ajax({
                    url: '/Product/AddProduct',
                    type: 'POST',
                    data: JSON.stringify(jsonData),
                    contentType: 'application/json',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer " + localStorage.getItem('authToken'));
                    },
                    success: function (response) {
                        showAlert("Product added successfully!");
                        fillProductsTable(selectedBusinessId);
                        $('#closeBtnAdd').click();
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) { window.location.href = '/CustomUser/LoginPage'; }
                        let errorMessage = xhr.status + ': ' + xhr.statusText + " -" + xhr.responseText;
                        showAlert("Error adding product! " + errorMessage);
                        $('#closeBtnAdd').click();
                    }
                });
            }
        };

        function removeProduct() {
            if (selectedProductsIds.length !== 1) {
                showAlert('Please select exactly one product to remove.');
                return;
            }
            $.ajax({
                url: '/Product/RemoveProduct/' + selectedProductsIds[0],
                type: 'POST',
                contentType: 'application/json',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", "Bearer " + localStorage.getItem('authToken'));
                },
                success: function (response) {
                    showAlert("Product removed successfully!");
                    fillProductsTable(selectedBusinessId);
                },
                error: function (xhr, status, error) {
                    if (xhr.status === 401) { window.location.href = '/CustomUser/LoginPage'; }
                    let errorMessage = xhr.status + ': ' + xhr.statusText + " -" + xhr.responseText;
                    showAlert("Error removing product! " + errorMessage);
                }
            });
        };

        function openEditModal() {
            if (selectedProductsIds.length !== 1) {
                showAlert('Please select exactly one product to edit.');
                return;
            }

            fetchProduct(selectedProductsIds[0]).then(data => {
                $('#editProductForm input[name="name"]').val(data.name);
                $('#editProductForm textarea[name="description"]').val(data.description);
                $('#editProductForm input[name="price"]').val(data.price);
                $('#editProductForm input[name="cost"]').val(data.cost);
                $('#editProductForm input[name="tax"]').val(data.tax);
                $('#editProductForm input[name="discount"]').val(data.discount);
                $('#editProductForm input[name="imageUrl"]').val(data.imageUrl);
                $('#editProductForm select[name="businessID"]').val(data.businessID);
                $('#editProductForm input[name="isActive"]').prop('checked', data.isActive);

                $('#editProductModal').modal('show');
            }).catch(error => {
                console.error(error);
            });
        };

        function editProduct() {
            let form = $('#editProductForm')[0];
            if (form.checkValidity() === true) {
                form.classList.add('was-validated');
                let formData = $('#editProductForm').serializeArray();
                let jsonData = {};
                formData.forEach(function (item) {
                    if (item.name === "businessID" && item.value === "") {
                        jsonData[item.name] = null;
                    } else if (item.name === "isActive") {
                        jsonData[item.name] = item.value === "on" ? true : false;
                    } else if (decimals.includes(item.name)) {
                        if (item.value === "") {
                            jsonData[item.name] = 0;
                        }
                        else {
                            jsonData[item.name] = parseFloat(item.value);
                        }
                    } else if (item.value === "") {
                        jsonData[item.name] = null;
                    } else {
                        jsonData[item.name] = item.value;
                    }
                });
                event.preventDefault();
                $.ajax({
                    url: '/Product/EditProduct/' + selectedProductsIds[0],
                    type: 'POST',
                    data: JSON.stringify(jsonData),
                    contentType: 'application/json',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer " + localStorage.getItem('authToken'));
                    },
                    success: function (response) {
                        showAlert("Product updated successfully!");
                        fillProductsTable();
                        $('#closeBtnEdit').click();
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) { window.location.href = '/CustomUser/LoginPage'; }
                        let errorMessage = xhr.status + ': ' + xhr.statusText + " -" + xhr.responseText;
                        showAlert("Error updating product! " + errorMessage);
                        $('#closeBtnEdit').click();
                    }
                });
            }
        };

        function fillProductsTable() {
            let tableBody = $('#productsTableBody');
            tableBody.empty();
            fetchProducts(selectedBusinessId, orderBy, ordering).then(data => {
                data.forEach(function (product) {
                    let isActive = product.isActive ? 'Yes' : 'No';
                    let image = product.imageUrl ? `<a href="${product.imageUrl}" target="_blank"><img src="${product.imageUrl}" alt="Image" width="100" height="100"></a>` : 'N/A';

                    tableBody.append(
                        `<tr data-product-id="${product.productID}">
                            <td><input type="checkbox" class="product-checkbox"></td>
                            <td>${product.name}</td>
                            <td>${product.description}</td>
                            <td>${product.price}</td>
                            <td>${product.cost}</td>
                            <td>${product.tax}</td>
                            <td>${product.discount}</td>
                            <td>${image}</td>
                            <td>${product.businessDto.name}</td>
                            <td>${isActive}</td>
                        </tr>`
                    );
                });
            }).catch(error => {
                console.error(error);
            });
            toggleOrdering();
        };

        function fillBusinessesDropdown() {
            fetchBusinesses().then(data => {
                let businessDropdowns = $('select[name="businessID"]');
                data.forEach(function (business) {
                    businessDropdowns.append(`<option value="${business.businessID}">${business.name}</option>`);
                });
                businessDropdowns.append(`<option value="null">Null</option>`);
            }).catch(error => {
                console.error(error);
            });
        };

        function toggleOrdering() {
            if (ordering === "ascending") {
                ordering = "descending";
                return;
            }
            ordering = "ascending";
        }

        $(document).on('change', '.product-checkbox', function () {
            let productCard = $(this).closest('tr');
            let productId = productCard.data('product-id');

            if ($(this).is(':checked')) {
                selectedProductId = productId;
                if (!selectedProductsIds.includes(productId)) {
                    selectedProductsIds.push(productId);
                }
            } else {
                if (selectedProductId === productId) {
                    selectedProductId = null;
                }
                let index = selectedProductsIds.indexOf(productId);
                if (index !== -1) {
                    selectedProductsIds.splice(index, 1);
                }
            }
            console.log(selectedProductsIds);
        });

    </script>
</body>
</html>
